plugins {
	id "com.diffplug.spotless" version "6.15.0"
	id 'com.palantir.git-version' version '0.15.0'
	id 'idea'
	id 'java-library'
}

description = "kafka-connect-s3"

allprojects {
	apply plugin: 'idea'
	apply plugin: 'maven-publish'

	group = 'com.spredfast.kafka.connect.s3'
	version = '1.3.2'

	apply plugin: 'java-library'
	sourceCompatibility = 11
	targetCompatibility = 11

	dependencies {
		constraints {
			api("software.amazon.awssdk:s3:2.24.12")
			api("org.apache.kafka:connect-api:3.5.1")
			api("org.slf4j:slf4j-api:2.0.7")
			api("com.fasterxml.jackson.core:jackson-databind:2.14.3")

			testImplementation("junit:junit:4.13.2")
			testImplementation("com.google.guava:guava:31.1-jre")
			testImplementation("javax.xml.bind:jaxb-api:2.4.0-b180830.0359")
			testImplementation("org.mockito:mockito-core:4.9.0")

			testImplementation("io.debezium:debezium-testing-testcontainers:2.5.4.Final")
			testImplementation("net.mguenther.kafka:kafka-junit:3.3.0")
			testImplementation("org.testcontainers:kafka:1.17.6")
			testImplementation("org.testcontainers:localstack:1.19.7")
		}
	}

	repositories {
		maven { url "https://repo.maven.apache.org/maven2" }
	}

	apply plugin: "com.diffplug.spotless"
	spotless {
		java {
			removeUnusedImports()
			cleanthat()
			googleJavaFormat()
			formatAnnotations()
		}
	}
}

dependencies {
	implementation project(':sink')
	implementation project(':source')
}

tasks.register('javadocJar', Jar) {
	dependsOn javadoc
	archiveClassifier.set('javadoc')
	from subprojects*.tasks.javadoc.destinationDir
}

tasks.register('sourcesJar', Jar) {
	from subprojects*.sourceSets.main.allSource
	archiveClassifier.set('sources')
}

jar {
	from subprojects*.sourceSets.main.output
}

artifacts {
	archives javadocJar, sourcesJar
}

ext {
	pomHumanName = 'Kafka Connect S3'
	pomDesc = 'S3 Source and Sink Connectors for Kafka Connect'
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'io.sugarcrm'
			artifact jar
		}
	}

	repositories {
		maven {
			credentials {
				username = System.getenv("MAVEN_USERNAME")
				password = System.getenv("MAVEN_PASSWORD")
			}

			url = "https://nexus.service.sugarcrm.com/repository/cxp-public/"
		}
		maven {
			name = 'GitHubPackages'
			credentials {
				username = System.getenv("USERNAME")
				password = System.getenv("TOKEN")
			}
			url = "https://maven.pkg.github.com/sugarcrm/kafka-connect-s3"
		}
	}
}
